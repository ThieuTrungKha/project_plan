import * as Notifications from "expo-notifications";
import * as Device from "expo-device";
import { Alert } from "react-native";

// H√†m ƒëƒÉng k√Ω push notification
export async function registerForPushNotificationsAsync() {
  try {
    if (!Device.isDevice) {
      console.error(
        "B·∫°n ƒëang ch·∫°y tr√™n tr√¨nh gi·∫£ l·∫≠p. Kh√¥ng th·ªÉ l·∫•y Push Token!",
      );
      Alert.alert("L·ªói", "Ph·∫£i ch·∫°y tr√™n thi·∫øt b·ªã th·∫≠t ƒë·ªÉ l·∫•y token!");
      return null;
    }

    // Ki·ªÉm tra quy·ªÅn th√¥ng b√°o
    const { status: existingStatus } =
      await Notifications.getPermissionsAsync();
    console.log("üìå Tr·∫°ng th√°i quy·ªÅn ban ƒë·∫ßu:", existingStatus);

    let finalStatus = existingStatus;
    if (existingStatus !== "granted") {
      const { status } = await Notifications.requestPermissionsAsync();
      finalStatus = status;
    }

    if (finalStatus !== "granted") {
      console.error("Kh√¥ng c√≥ quy·ªÅn nh·∫≠n th√¥ng b√°o.");
      Alert.alert(
        "L·ªói",
        "·ª®ng d·ª•ng kh√¥ng c√≥ quy·ªÅn nh·∫≠n th√¥ng b√°o. H√£y ki·ªÉm tra l·∫°i c√†i ƒë·∫∑t!",
      );
      return null;
    }

    // L·∫•y push token
    const pushToken = (await Notifications.getExpoPushTokenAsync()).data;
    console.log("L·∫•y th√†nh c√¥ng Push Token:", pushToken);

    return pushToken;
  } catch (error) {
    console.error("L·ªói l·∫•y Push Token:", error);
    Alert.alert(
      "L·ªói",
      "ƒê√£ x·∫£y ra l·ªói khi l·∫•y Push Token. H√£y ki·ªÉm tra console ƒë·ªÉ bi·∫øt chi ti·∫øt.",
    );
    return null;
  }
}
